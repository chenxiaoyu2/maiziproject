# Generated by Django 2.0.3 on 2018-03-29 00:31

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ号码')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='手机号码')),
                ('url', models.URLField(blank=True, max_length=100, null=True, verbose_name='个人网页地址')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CareerCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='职业课程名称')),
                ('desc', models.CharField(default='', max_length=50, verbose_name='课程描述')),
                ('study_count', models.IntegerField(default=0, verbose_name='学习人数')),
                ('play_count', models.IntegerField(default=0, verbose_name='播放次数')),
                ('course_img', models.CharField(default='/static/test/15.png', max_length=200, verbose_name='课程图片')),
            ],
            options={
                'verbose_name': '职业课程',
                'verbose_name_plural': '职业课程',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('video_url', models.URLField(default='http://ocsource.maiziedu.com/csshtml1.m4v', verbose_name='视频')),
                ('video_length', models.IntegerField(verbose_name='视频长度')),
                ('index', models.IntegerField(verbose_name='次序')),
                ('course', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='maiziapp.CareerCourse', verbose_name='课程')),
            ],
            options={
                'verbose_name': '课时表',
                'verbose_name_plural': '课时表',
            },
        ),
        migrations.CreateModel(
            name='links',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='标题')),
                ('description', models.CharField(max_length=200, verbose_name='友情链接描述')),
                ('callback_url', models.URLField(verbose_name='url地址')),
                ('date_publish', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('index', models.IntegerField(default=999, verbose_name='排列顺序(从小到大)')),
            ],
            options={
                'verbose_name': '友情链接',
                'verbose_name_plural': '友情链接',
                'ordering': ['index', 'id'],
            },
        ),
        migrations.CreateModel(
            name='read_article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading_type', models.CharField(choices=[('AV', '篮球'), ('NW', '足球'), ('DC', '麦子学院')], default='AV', max_length=2, verbose_name='文章类型')),
                ('title', models.CharField(max_length=200, verbose_name='文章标题')),
                ('url', models.URLField(default='', verbose_name='文章链接')),
            ],
            options={
                'verbose_name': '首页推荐文章',
                'verbose_name_plural': '首页推荐文章',
            },
        ),
        migrations.CreateModel(
            name='RecommendKeywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='推荐搜索标签')),
            ],
            options={
                'verbose_name': '推荐搜索标签',
                'verbose_name_plural': '推荐搜索标签',
            },
        ),
        migrations.CreateModel(
            name='userinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('老师', '老师'), ('学生', '学生')], default='老师', max_length=10, verbose_name='用户类型')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='名称')),
                ('description', models.CharField(default='', max_length=50, verbose_name='个人介绍')),
                ('img_url', models.CharField(default='/static/test/15.png', max_length=200, verbose_name='头像链接')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='teacher',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='maiziapp.userinfo', verbose_name='讲课老师'),
        ),
        migrations.AddField(
            model_name='careercourse',
            name='user',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='maiziapp.userinfo', verbose_name='授课老师'),
        ),
    ]
